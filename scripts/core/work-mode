#!/usr/bin/env bash

# Work Mode Toggle
# Enables work configuration for this machine

set -euo pipefail

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

WORK_MARKER="$HOME/.work-machine"

case "${1:-status}" in
    "on"|"enable")
        touch "$WORK_MARKER"
        echo -e "${GREEN}‚úÖ Work mode enabled${NC}"
        echo -e "${BLUE}‚ÑπÔ∏è  Work configuration will load on next shell restart${NC}"
        echo -e "${YELLOW}üí° Run 'exec zsh' to reload your shell now${NC}"
        ;;
    "off"|"disable")
        if [[ -f "$WORK_MARKER" ]]; then
            rm "$WORK_MARKER"
            echo -e "${GREEN}‚úÖ Work mode disabled${NC}"
            echo -e "${BLUE}‚ÑπÔ∏è  Personal configuration will load on next shell restart${NC}"
            echo -e "${YELLOW}üí° Run 'exec zsh' to reload your shell now${NC}"
        else
            echo -e "${BLUE}‚ÑπÔ∏è  Work mode already disabled${NC}"
        fi
        ;;
    "status")
        if [[ -f "$WORK_MARKER" ]]; then
            echo -e "${GREEN}üíº Work mode: ENABLED${NC}"
            echo "   Marker file: $WORK_MARKER"
            echo "   Configuration: work-config.zsh will be loaded"
        else
            echo -e "${BLUE}üè† Work mode: DISABLED${NC}"
            echo "   Configuration: personal-config.zsh will be loaded"
        fi
        ;;
    "help"|*)
        cat << EOF
Work Mode Toggle

Usage: $0 [COMMAND]

COMMANDS:
    on, enable      Enable work mode for this machine
    off, disable    Disable work mode for this machine  
    status          Show current work mode status
    help            Show this help message

EXAMPLES:
    $0 on           # Enable work mode
    $0 off          # Disable work mode
    $0 status       # Check current mode

NOTES:
    - Work mode creates ~/.work-machine marker file
    - Changes take effect on next shell restart
    - Run 'exec zsh' to reload immediately

EOF
        ;;
esac
