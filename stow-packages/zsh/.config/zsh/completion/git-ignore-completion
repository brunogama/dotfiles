#compdef git-ignore

autoload -U is-at-least

_git-ignore() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-l[List <templates> or all available templates]' \
'--list[List <templates> or all available templates]' \
'-u[Update templates by fetching them from gitignore.io]' \
'--update[Update templates by fetching them from gitignore.io]' \
'-s[Ignore all user defined aliases and templates]' \
'--simple[Ignore all user defined aliases and templates]' \
'-a[Autodetect templates based on the existing files]' \
'--auto[Autodetect templates based on the existing files]' \
'-w[Write to \`.gitignore\` file instead of stdout]' \
'--write[Write to \`.gitignore\` file instead of stdout]' \
'-f[Forcefully overwrite existing \`.gitignore\` file]' \
'--force[Forcefully overwrite existing \`.gitignore\` file]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'::templates -- Names of templates to show/search for:' \
":: :_git-ignore_commands" \
"*::: :->git-ignore" \
&& ret=0
    case $state in
    (git-ignore)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-command-$line[2]:"
        case $line[2] in
            (alias)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
":: :_git-ignore__alias_commands" \
"*::: :->alias" \
&& ret=0

    case $state in
    (alias)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-alias-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(ls)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':name:' \
'*::aliases:' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':name:' \
&& ret=0
;;
(rm)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':name:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_git-ignore__alias__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-alias-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(template)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
":: :_git-ignore__template_commands" \
"*::: :->template" \
&& ret=0

    case $state in
    (template)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-template-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(ls)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':name:' \
':file_name:' \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':name:' \
&& ret=0
;;
(rm)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':name:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_git-ignore__template__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-template-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(init)
_arguments "${_arguments_options[@]}" : \
'--force[Forcefully create config, possibly overwrite existing]' \
'--migrate[Migrate from old config path to new]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':shell -- Shell to generate completion for:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_git-ignore__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-help-command-$line[1]:"
        case $line[1] in
            (alias)
_arguments "${_arguments_options[@]}" : \
":: :_git-ignore__help__alias_commands" \
"*::: :->alias" \
&& ret=0

    case $state in
    (alias)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-help-alias-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(template)
_arguments "${_arguments_options[@]}" : \
":: :_git-ignore__help__template_commands" \
"*::: :->template" \
&& ret=0

    case $state in
    (template)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:git-ignore-help-template-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(remove)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(init)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_git-ignore_commands] )) ||
_git-ignore_commands() {
    local commands; commands=(
'alias:Manage local templates' \
'template:Manage local aliases' \
'init:Initialize user configuration' \
'completion:Generate shell completion' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'git-ignore commands' commands "$@"
}
(( $+functions[_git-ignore__alias_commands] )) ||
_git-ignore__alias_commands() {
    local commands; commands=(
'list:List available aliases' \
'ls:List available aliases' \
'add:Add a new alias' \
'remove:Remove an alias' \
'rm:Remove an alias' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'git-ignore alias commands' commands "$@"
}
(( $+functions[_git-ignore__alias__add_commands] )) ||
_git-ignore__alias__add_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore alias add commands' commands "$@"
}
(( $+functions[_git-ignore__alias__help_commands] )) ||
_git-ignore__alias__help_commands() {
    local commands; commands=(
'list:List available aliases' \
'add:Add a new alias' \
'remove:Remove an alias' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'git-ignore alias help commands' commands "$@"
}
(( $+functions[_git-ignore__alias__help__add_commands] )) ||
_git-ignore__alias__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore alias help add commands' commands "$@"
}
(( $+functions[_git-ignore__alias__help__help_commands] )) ||
_git-ignore__alias__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore alias help help commands' commands "$@"
}
(( $+functions[_git-ignore__alias__help__list_commands] )) ||
_git-ignore__alias__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore alias help list commands' commands "$@"
}
(( $+functions[_git-ignore__alias__help__remove_commands] )) ||
_git-ignore__alias__help__remove_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore alias help remove commands' commands "$@"
}
(( $+functions[_git-ignore__alias__list_commands] )) ||
_git-ignore__alias__list_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore alias list commands' commands "$@"
}
(( $+functions[_git-ignore__alias__remove_commands] )) ||
_git-ignore__alias__remove_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore alias remove commands' commands "$@"
}
(( $+functions[_git-ignore__completion_commands] )) ||
_git-ignore__completion_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore completion commands' commands "$@"
}
(( $+functions[_git-ignore__help_commands] )) ||
_git-ignore__help_commands() {
    local commands; commands=(
'alias:Manage local templates' \
'template:Manage local aliases' \
'init:Initialize user configuration' \
'completion:Generate shell completion' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'git-ignore help commands' commands "$@"
}
(( $+functions[_git-ignore__help__alias_commands] )) ||
_git-ignore__help__alias_commands() {
    local commands; commands=(
'list:List available aliases' \
'add:Add a new alias' \
'remove:Remove an alias' \
    )
    _describe -t commands 'git-ignore help alias commands' commands "$@"
}
(( $+functions[_git-ignore__help__alias__add_commands] )) ||
_git-ignore__help__alias__add_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help alias add commands' commands "$@"
}
(( $+functions[_git-ignore__help__alias__list_commands] )) ||
_git-ignore__help__alias__list_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help alias list commands' commands "$@"
}
(( $+functions[_git-ignore__help__alias__remove_commands] )) ||
_git-ignore__help__alias__remove_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help alias remove commands' commands "$@"
}
(( $+functions[_git-ignore__help__completion_commands] )) ||
_git-ignore__help__completion_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help completion commands' commands "$@"
}
(( $+functions[_git-ignore__help__help_commands] )) ||
_git-ignore__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help help commands' commands "$@"
}
(( $+functions[_git-ignore__help__init_commands] )) ||
_git-ignore__help__init_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help init commands' commands "$@"
}
(( $+functions[_git-ignore__help__template_commands] )) ||
_git-ignore__help__template_commands() {
    local commands; commands=(
'list:List available templates' \
'add:Add a new template' \
'remove:Remove a template' \
    )
    _describe -t commands 'git-ignore help template commands' commands "$@"
}
(( $+functions[_git-ignore__help__template__add_commands] )) ||
_git-ignore__help__template__add_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help template add commands' commands "$@"
}
(( $+functions[_git-ignore__help__template__list_commands] )) ||
_git-ignore__help__template__list_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help template list commands' commands "$@"
}
(( $+functions[_git-ignore__help__template__remove_commands] )) ||
_git-ignore__help__template__remove_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore help template remove commands' commands "$@"
}
(( $+functions[_git-ignore__init_commands] )) ||
_git-ignore__init_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore init commands' commands "$@"
}
(( $+functions[_git-ignore__template_commands] )) ||
_git-ignore__template_commands() {
    local commands; commands=(
'list:List available templates' \
'ls:List available templates' \
'add:Add a new template' \
'remove:Remove a template' \
'rm:Remove a template' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'git-ignore template commands' commands "$@"
}
(( $+functions[_git-ignore__template__add_commands] )) ||
_git-ignore__template__add_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore template add commands' commands "$@"
}
(( $+functions[_git-ignore__template__help_commands] )) ||
_git-ignore__template__help_commands() {
    local commands; commands=(
'list:List available templates' \
'add:Add a new template' \
'remove:Remove a template' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'git-ignore template help commands' commands "$@"
}
(( $+functions[_git-ignore__template__help__add_commands] )) ||
_git-ignore__template__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore template help add commands' commands "$@"
}
(( $+functions[_git-ignore__template__help__help_commands] )) ||
_git-ignore__template__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore template help help commands' commands "$@"
}
(( $+functions[_git-ignore__template__help__list_commands] )) ||
_git-ignore__template__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore template help list commands' commands "$@"
}
(( $+functions[_git-ignore__template__help__remove_commands] )) ||
_git-ignore__template__help__remove_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore template help remove commands' commands "$@"
}
(( $+functions[_git-ignore__template__list_commands] )) ||
_git-ignore__template__list_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore template list commands' commands "$@"
}
(( $+functions[_git-ignore__template__remove_commands] )) ||
_git-ignore__template__remove_commands() {
    local commands; commands=()
    _describe -t commands 'git-ignore template remove commands' commands "$@"
}

if [ "$funcstack[1]" = "_git-ignore" ]; then
    _git-ignore "$@"
else
    compdef _git-ignore git-ignore
fi
