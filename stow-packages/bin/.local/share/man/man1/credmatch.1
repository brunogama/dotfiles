.TH CREDMATCH 1 "September 2025" "CredMatch 1.0" "User Commands"
.SH NAME
credmatch \- secure credential management with Git and encryption
.SH SYNOPSIS
.B credmatch
.I command
.RI [ options ]
.SH DESCRIPTION
.B credmatch
is a secure credential management system that stores encrypted credentials in a Git repository. It uses AES-256-CBC encryption with PBKDF2 key derivation to protect your secrets, while providing version control and synchronization across multiple machines.
.PP
All credentials are encrypted with a master password and stored in a single file (credentials.enc) that is automatically committed to your Git repository.
.SH COMMANDS
.TP
.BI "init " git_repo_url
Initialize credential store with a Git repository. Creates a new .credmatch-store directory and clones the specified repository.
.TP
.B init-here
Use the current directory as the credential store. The directory must already be a Git repository.
.TP
.BI "store " "master_password key value"
Store a credential with the given key and value, encrypted with the master password.
.TP
.BI "fetch " "master_password key"
Retrieve and decrypt a specific credential by key.
.TP
.BI "list " master_password
List all stored credential keys and values (decrypted).
.TP
.B sync
Synchronize with the remote Git repository (git pull).
.TP
.B status
Show Git repository status, remote information, and last commit.
.SH EXAMPLES
.PP
Initialize a new credential store:
.RS
.B credmatch init git@github.com:user/credentials.git
.RE
.PP
Store an API key:
.RS
.B credmatch store "my-master-password" "GITHUB_TOKEN" "ghp_xxxxxxxxxxxx"
.RE
.PP
Retrieve an API key:
.RS
.B credmatch fetch "my-master-password" "GITHUB_TOKEN"
.RE
.PP
List all credentials:
.RS
.B credmatch list "my-master-password"
.RE
.PP
Sync with remote repository:
.RS
.B credmatch sync
.RE
.SH SECURITY
.PP
CredMatch uses strong encryption to protect your credentials:
.IP \[bu] 2
.B Encryption: 
AES-256-CBC (Advanced Encryption Standard)
.IP \[bu] 2
.B Key Derivation: 
PBKDF2 (Password-Based Key Derivation Function 2)
.IP \[bu] 2
.B Encoding: 
Base64 for safe text storage
.IP \[bu] 2
.B Salt: 
Automatically generated by OpenSSL
.PP
.B WARNING:
If you lose your master password, your credentials cannot be recovered. Store your master password securely (e.g., in macOS Keychain).
.SH INTEGRATION
.PP
CredMatch integrates with your dotfiles system and can be used with:
.IP \[bu] 2
.B Keychain Integration: 
Store master password in macOS Keychain using store-api-key
.IP \[bu] 2
.B Work Functions: 
backup-work-secrets and sync-work-secrets for batch operations
.IP \[bu] 2
.B Home Sync Service: 
Automatic synchronization across machines
.SH FILES
.TP
.I credentials.enc
Encrypted credentials file (in credential store directory)
.TP
.I .credmatch-store/
Default credential store directory (if not using current directory)
.SH ENVIRONMENT
.TP
.B PATH
Must include the directory containing credmatch script
.SH DEPENDENCIES
.TP
.B git
Required for repository operations
.TP
.B openssl
Required for encryption/decryption
.SH EXIT STATUS
.TP
.B 0
Success
.TP
.B 1
Error (invalid arguments, encryption failure, git error, etc.)
.SH SEE ALSO
.BR git (1),
.BR openssl (1),
.BR store-api-key (1),
.BR backup-work-secrets (1),
.BR home-sync (1)
.SH AUTHOR
Bruno Gama (dotfiles system)
.SH COPYRIGHT
This is free software; you are free to change and redistribute it.
