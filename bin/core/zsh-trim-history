#!/usr/bin/env zsh
#
# zsh-trim-history - Trim old history to keep only recent entries
# Version: 1.0
#
# Reduces history file size to improve shell startup performance.
#

set -euo pipefail

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BOLD='\033[1m'
NC='\033[0m'

HISTFILE="${ZDOTDIR:-$HOME}/.config/zsh/.zsh_history"
KEEP_ENTRIES=10000

# Check if history file exists
if [[ ! -f "$HISTFILE" ]]; then
    echo -e "${RED}Error: History file not found: $HISTFILE${NC}" >&2
    exit 1
fi

# Get current size
CURRENT_SIZE=$(wc -l < "$HISTFILE" | tr -d ' ')

echo -e "${BLUE}${BOLD}Zsh History Trimming${NC}"
echo ""
echo -e "History file: ${BOLD}$HISTFILE${NC}"
echo -e "Current size: ${BOLD}$CURRENT_SIZE${NC} entries"
echo -e "Target size:  ${BOLD}$KEEP_ENTRIES${NC} entries"
echo ""

if [[ $CURRENT_SIZE -le $KEEP_ENTRIES ]]; then
    echo -e "${GREEN}✓ History is already within target size.${NC}"
    echo "  No trimming needed."
    exit 0
fi

# Calculate how many will be removed
TO_REMOVE=$((CURRENT_SIZE - KEEP_ENTRIES))

echo -e "${YELLOW}⚠ Will remove $TO_REMOVE old entries.${NC}"
echo ""

# Confirmation prompt
read "confirm?Continue? (y/N): "

if [[ "$confirm" != "y" && "$confirm" != "Y" ]]; then
    echo -e "${BLUE}Operation cancelled.${NC}"
    exit 0
fi

echo ""
echo "Processing..."

# Create backup
BACKUP_FILE="${HISTFILE}.backup.$(date +%Y%m%d_%H%M%S)"
cp "$HISTFILE" "$BACKUP_FILE"
echo -e "${GREEN}✓${NC} Backup created: $BACKUP_FILE"

# Keep last N entries
tail -n "$KEEP_ENTRIES" "$HISTFILE" > "${HISTFILE}.tmp"

# Replace original
if mv "${HISTFILE}.tmp" "$HISTFILE"; then
    NEW_SIZE=$(wc -l < "$HISTFILE" | tr -d ' ')

    echo -e "${GREEN}✓${NC} History trimmed!"
    echo ""
    echo -e "${BOLD}Results:${NC}"
    echo -e "  Old size: $CURRENT_SIZE entries"
    echo -e "  New size: $NEW_SIZE entries"
    echo -e "  Removed:  $TO_REMOVE entries"
    echo ""
    echo -e "${BLUE}Tip:${NC} Recent commands are still searchable with Ctrl+R"
    echo -e "${BLUE}Tip:${NC} Backup available at: $(basename "$BACKUP_FILE")"
else
    echo -e "${RED}✗ Failed to trim history${NC}" >&2
    rm -f "${HISTFILE}.tmp"
    exit 1
fi
