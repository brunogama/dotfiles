#!/bin/bash

set -euo pipefail

# Help function
show_help() {
    cat << EOF
Usage: cm <type>[scope] <message>
Example: cm feat(auth) "add login feature"
        cm fix "resolve null pointer"

Types:
    feat:     New feature
    fix:      Bug fix
    docs:     Documentation changes
    style:    Code style changes
    refactor: Code refactoring
    test:     Testing
    chore:    Maintenance tasks
EOF
}

# Validate input
if [ $# -lt 1 ]; then
    show_help
    exit 1
fi

# Extract type and scope
commit_type="${1%%\(*}"  # Extract type before parenthesis
scope=""

if [[ $1 =~ \(.*\) ]]; then
    scope=$(echo "$1" | sed -n 's/.*(\(.*\)).*/\1/p')
fi

# Validate commit type
valid_types=("feat" "fix" "docs" "style" "refactor" "test" "chore")
if [[ ! " ${valid_types[*]} " =~ ${commit_type} ]]; then
    echo "Error: Invalid commit type '${commit_type}'"
    show_help
    exit 1
fi

# Build commit message template
if [ -n "$scope" ]; then
    template="${commit_type}(${scope}): "
else
    template="${commit_type}: "
fi

# Start git commit with template
if [ $# -eq 1 ]; then
    git commit -m "$template" -e
else
    # Remove the first argument and join the rest
    shift
    message="$*"
    git commit -m "${template}${message}"
fi
