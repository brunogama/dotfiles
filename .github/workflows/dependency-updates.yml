name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allow manual triggers

jobs:
  check-dependencies:
    runs-on: macos-latest
    outputs:
      homebrew_updates: ${{ steps.check_deps.outputs.homebrew_updates }}
      python_updates: ${{ steps.check_deps.outputs.python_updates }}
      total_updates: ${{ steps.check_deps.outputs.total_updates }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq for JSON parsing
        run: brew install jq

      - name: Check for outdated dependencies
        id: check_deps
        run: |
          chmod +x bin/core/dependency-checker

          # Run dependency checker and save results
          bin/core/dependency-checker check-all --format json > dependency-report.json || true

          # Check if there are any updates
          HOMEBREW_COUNT=$(bin/core/dependency-checker check-homebrew --format json | jq -r '. | length')
          PYTHON_COUNT=$(bin/core/dependency-checker check-python --format json | jq -r '. | length')

          echo "homebrew_updates=${HOMEBREW_COUNT}" >> $GITHUB_OUTPUT
          echo "python_updates=${PYTHON_COUNT}" >> $GITHUB_OUTPUT

          TOTAL_UPDATES=$((HOMEBREW_COUNT + PYTHON_COUNT))
          echo "total_updates=${TOTAL_UPDATES}" >> $GITHUB_OUTPUT

      - name: Generate dependency update summary
        run: |
          echo "## Dependency Update Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Homebrew updates: ${{ steps.check_deps.outputs.homebrew_updates }}" >> $GITHUB_STEP_SUMMARY
          echo "- Python updates: ${{ steps.check_deps.outputs.python_updates }}" >> $GITHUB_STEP_SUMMARY
          echo "- Total updates: ${{ steps.check_deps.outputs.total_updates }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Upload dependency report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: dependency-report.json
          retention-days: 90

  create-update-pr:
    runs-on: macos-latest
    needs: check-dependencies
    if: needs.check-dependencies.outputs.total_updates > 0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create dependency update branch
        run: |
          DATE=$(date +%Y%m%d)
          BRANCH="dependency-updates-${DATE}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -b "${BRANCH}"

          echo "BRANCH_NAME=${BRANCH}" >> $GITHUB_ENV

      - name: Update Homebrew dependencies
        run: |
          # For now, just document the updates needed
          # In the future, this could automatically update Brewfile
          echo "Homebrew updates available" > dependency-updates.md
          bin/core/dependency-checker check-homebrew >> dependency-updates.md

      - name: Commit changes
        run: |
          git add dependency-updates.md
          git commit -m "chore(deps): document available dependency updates" || true

      - name: Push branch
        run: |
          git push origin "${BRANCH_NAME}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
          title: "chore(deps): Dependency updates available"
          body: |
            ## Dependency Updates

            This PR documents available dependency updates.

            ### Summary
            - Homebrew: ${{ needs.check-dependencies.outputs.homebrew_updates }} updates
            - Python: ${{ needs.check-dependencies.outputs.python_updates }} updates

            ### Action Required
            Review the updates and manually update dependencies as appropriate.

            ### Testing
            - [ ] Test updated dependencies locally
            - [ ] Verify no breaking changes
            - [ ] Run all tests

            ðŸ¤– Generated by automated dependency checker
          labels: dependencies, automated
