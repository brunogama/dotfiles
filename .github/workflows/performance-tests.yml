name: Performance Tests

on:
  push:
    branches: [ main, feature/** ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'

jobs:
  performance-tests:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install jq bc

      - name: Run zsh startup benchmark
        id: zsh_benchmark
        run: |
          chmod +x tests/performance/benchmark_zsh_startup.sh
          tests/performance/benchmark_zsh_startup.sh 10 550 | tee benchmark_output.txt

      - name: Compare against baseline
        if: always()
        run: |
          if [[ -f .performance-baselines.json ]]; then
            chmod +x bin/core/performance-baseline

            # Extract mean from benchmark output
            CURRENT_VALUE=$(grep "Mean:" benchmark_output.txt | grep -oE '[0-9]+' | head -1)

            if [[ -n "${CURRENT_VALUE}" ]]; then
              bin/core/performance-baseline compare \
                --metric zsh-startup \
                --value "${CURRENT_VALUE}" \
                --threshold 10
            else
              echo "Could not extract mean value from benchmark output"
              exit 1
            fi
          else
            echo "No baseline file found. This is the first run."
          fi

      - name: Upload performance results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: |
            .performance-baselines.json
          retention-days: 30

      - name: Generate performance report
        if: always()
        run: |
          echo "## Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Zsh Startup Performance" >> $GITHUB_STEP_SUMMARY
          echo "- Threshold: 550ms" >> $GITHUB_STEP_SUMMARY
          echo "- Status: Check logs for details" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ -f .performance-baselines.json ]]; then
            echo "### Current Baselines" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat .performance-baselines.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Fail on performance regression
        if: steps.zsh_benchmark.outcome == 'failure'
        run: |
          echo "Performance regression detected!"
          exit 1
