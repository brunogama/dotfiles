# GitHub Flow Optimized Git Aliases
# Based on: https://haacked.com/archive/2014/07/28/github-flow-aliases/
# Streamlined for maximum efficiency and minimal cognitive load

[alias]
    # === CORE WORKFLOW ===

    # Update local repository (pull + rebase + prune + submodules)
    up = !git pull --rebase --prune $@ && git submodule update --init --recursive

    # Create and switch to new branch
    cob = checkout -b

    # Commit all changes with message
    cm = !git add -A && git commit -m

    # Save work-in-progress
    save = !git add -A && git commit -m "SAVEPOINT"

    # Undo last commit (keep changes)
    undo = reset --soft HEAD~1

    # Wipe last commit (lose changes) - use with caution!
    wipe = reset --hard HEAD~1

    # === BRANCH MANAGEMENT ===

    # Switch branches
    sw = switch

    # Current branch name
    current = rev-parse --abbrev-ref HEAD

    # List recent branches
    recent = branch --sort=-committerdate --format='%(committerdate:relative)%09%(refname:short)'

    # Delete branch locally and remotely
    nuke = !sh -c 'git branch -d $1 && git push origin --delete $1' -

    # === WORKTREE MANAGEMENT ===

    # Interactive worktree manager (standard git worktrees)
    wt = !git-wt-interactive

    # Interactive virtual worktree manager (shallow clones for large repos)
    vw = !git-vw-interactive

    # === QUICK STATUS & LOGS ===

    # Short status
    s = status -s

    # Pretty log
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

    # One line log
    ll = log --oneline --decorate --graph

    # What changed in last commit
    last = show --name-only --oneline HEAD

    # === SYNC & PUSH ===

    # Push current branch and set upstream
    publish = !git push --set-upstream origin $(git current)

    # Fetch everything
    sync = !git fetch --all --tags --prune

    # === STASH SHORTCUTS ===

    # Quick stash with timestamp
    stash-quick = !git stash push -m "$(date '+%Y-%m-%d %H:%M:%S')"

    # === CLEANUP ===

    # Remove merged branches (except main/master/develop)
    cleanup = !git branch --merged | grep -vE '(main|master|develop|\\*)' | xargs -n 1 git branch -d

    # === DIFF & STAGING ===

    # Show staged changes
    staged = diff --cached

    # Show unstaged changes
    unstaged = diff

    # Interactive add
    add-patch = add --patch

    # === COMMIT HELPERS ===

    # Amend last commit without editing message
    amend = commit --amend --no-edit

    # Interactive commit message reword with FZF
    reword = !git-reword

    # Conventional commits (following your existing pattern)
    feat = !git cm "feat: $1" && :
    fix = !git cm "fix: $1" && :
    docs = !git cm "docs: $1" && :
    chore = !git cm "chore: $1" && :

    # === EMERGENCY ===

    # Abort whatever you're doing
    abort = !git merge --abort 2>/dev/null || git rebase --abort 2>/dev/null || echo "Nothing to abort"

    # Reset to match remote
    reset-hard = !git fetch && git reset --hard @{u}

    # === UTILITIES ===

    # List aliases
    aliases = !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /

    # Find commits by message
    find = !git log --grep

    # Repository root
    root = rev-parse --show-toplevel
